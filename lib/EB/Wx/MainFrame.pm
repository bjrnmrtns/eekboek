# generated by wxGlade 0.4cvs on Mon Aug  1 17:59:21 2005
# To get wxPerl visit http://wxPerl.sourceforge.net/

package main;

our $config;
our $dbh;

use Wx 0.15 qw[:allclasses];
use strict;
package MainFrame;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

# begin wxGlade: ::dependencies
# end wxGlade

use DbkPanelI;
use DbkPanelV;
use DbkPanelB;
use DbkPanelM;
use DbkPanelK;

sub new {
	my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
	$parent = undef              unless defined $parent;
	$id     = -1                 unless defined $id;
	$title  = ""                 unless defined $title;
	$pos    = wxDefaultPosition  unless defined $pos;
	$size   = wxDefaultSize      unless defined $size;
	$name   = ""                 unless defined $name;

	use constant MENU_PREFS	     => Wx::NewId();
	use constant MENU_RESTART    => Wx::NewId();
	use constant MENU_GRBK	     => Wx::NewId();
	use constant MENU_REL	     => Wx::NewId();
	use constant MENU_BTW	     => Wx::NewId();
	use constant MENU_R_PROOF    => Wx::NewId();
	use constant MENU_R_BALANS   => Wx::NewId();
	use constant MENU_R_RESULT   => Wx::NewId();
	use constant MENU_R_GRBK     => Wx::NewId();
	use constant MENU_R_JOURNAL  => Wx::NewId();
	use constant MENU_R_BTW	     => Wx::NewId();
	use constant MENU_R_DEB	     => Wx::NewId();
	use constant MENU_R_CRD	     => Wx::NewId();

# begin wxGlade: MainFrame::new

	$style = wxDEFAULT_FRAME_STYLE 
		unless defined $style;

	$self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
	

	# Menu Bar

	$self->{mainframe_menubar} = Wx::MenuBar->new();
	$self->SetMenuBar($self->{mainframe_menubar});
	my $wxglade_tmp_menu;
	$wxglade_tmp_menu = Wx::Menu->new();
	$wxglade_tmp_menu->Append(wxID_NEW, "Nieuw ...", "Aanmaken nieuwe administartie");
	$wxglade_tmp_menu->Append(wxID_OPEN, "Open ...", "Open een bestaande administratie");
	$wxglade_tmp_menu->Append(wxID_CLOSE, "Sluiten", "Beëindig het werken met deze administratie");
	$wxglade_tmp_menu->AppendSeparator();
	$wxglade_tmp_menu->Append(MENU_PREFS, "Instellingen", "Instellingen");
	$wxglade_tmp_menu->AppendSeparator();
	$wxglade_tmp_menu->Append(MENU_RESTART, "&Restart\tAlt-R", "Herstart (voor testen)");
	$wxglade_tmp_menu->Append(wxID_CLOSE, "E&xit\tAlt-x", "Beëindig het programma");
	$self->{mainframe_menubar}->Append($wxglade_tmp_menu, "&Bestand");
	$wxglade_tmp_menu = Wx::Menu->new();
	$wxglade_tmp_menu->Append(wxID_CUT, "Knip", "");
	$wxglade_tmp_menu->Append(wxID_PASTE, "Plak", "");
	$wxglade_tmp_menu->Append(wxID_COPY, "Kopiëer", "");
	$self->{mainframe_menubar}->Append($wxglade_tmp_menu, "&Edit");
	$wxglade_tmp_menu = Wx::Menu->new();
	$wxglade_tmp_menu->Append(MENU_GRBK, "Grootboekrekeningen", "Onderhoud rekeningschema en grootboekrekeningen");
	$wxglade_tmp_menu->Append(MENU_REL, "Relaties", "Onderhoud debiteuren en crediteuren");
	$wxglade_tmp_menu->Append(MENU_BTW, "BTW Tarieven", "Onderhoud BTW tariefgroepen");
	$self->{mainframe_menubar}->Append($wxglade_tmp_menu, "&Onderhoud");
	$wxglade_tmp_menu = Wx::Menu->new();
	$self->{mainframe_menubar}->Append($wxglade_tmp_menu, "&Dagboeken");
	$wxglade_tmp_menu = Wx::Menu->new();
	$wxglade_tmp_menu->Append(MENU_R_PROOF, "Proef- en Saldibalans", "Opmaken Proef- en Saldibalans");
	$wxglade_tmp_menu->Append(MENU_R_BALANS, "Balans", "Opmaken Balans");
	$wxglade_tmp_menu->Append(MENU_R_RESULT, "Resultaatrekening", "Opmaken Resultaatrekening");
	$wxglade_tmp_menu->AppendSeparator();
	$wxglade_tmp_menu->Append(MENU_R_GRBK, "Grootboek", "Opmaken Grootboekrapportage");
	$wxglade_tmp_menu->Append(MENU_R_JOURNAL, "Journaal", "Opmaken Journaal");
	$wxglade_tmp_menu->Append(MENU_R_BTW, "BTW aangifte", "Opmaken BTW aangifte");
	$wxglade_tmp_menu->AppendSeparator();
	$wxglade_tmp_menu->Append(MENU_R_DEB, "Debiteuren", "Opmaken Debiteurenoverzicht");
	$wxglade_tmp_menu->Append(MENU_R_CRD, "Crediteuren", "Opmaken Crediteurenoverzicht");
	$self->{mainframe_menubar}->Append($wxglade_tmp_menu, "Rapportages");
	$wxglade_tmp_menu = Wx::Menu->new();
	$wxglade_tmp_menu->Append(wxID_ABOUT, "&Info", "Informatie");
	$self->{mainframe_menubar}->Append($wxglade_tmp_menu, "&Hulp");
	
# Menu Bar end

	$self->{mainframe_statusbar} = $self->CreateStatusBar(1, 0);
	$self->{eb_logo} = Wx::StaticBitmap->new($self, -1, Wx::Bitmap->new("/home/jv/src/eekboek/GUI/eb.jpg", wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxDOUBLE_BORDER);

	$self->__set_properties();
	$self->__do_layout();

# end wxGlade

	$self->dagboekenmenu;

	use Wx::Event qw(EVT_MENU EVT_CLOSE);

	my $closehandler = sub {
	    my ($self, $event) = @_;
	    my @a = $self->GetPositionXY;
	    $config->mainw->{xpos} =  $a[0];
	    $config->mainw->{ypos} =  $a[1];
	    @a = $self->GetSizeWH;
	    $config->mainw->{xwidth} = $a[0];
	    $config->mainw->{ywidth} = $a[1];

#	    # Explicitly destroy the hidden (but still alive!) dialogs.
#	    foreach ( qw(search select filedialog dirdialog) ) {
#		next unless $self->{"d_$_"};
#		$self->{"d_$_"}->Destroy;
#	    }
	};

	EVT_MENU($self, wxID_CLOSE,
		 sub {
		     my ($self, $event) = @_;
		     $closehandler->(@_);
		     $self->Close(1);
		 });


	EVT_CLOSE($self,
		 sub {
		     my ($self, $event) = @_;
		     $closehandler->(@_);
		     $self->Destroy;
		 });

	EVT_MENU($self, MENU_RESTART,
		 sub {
		     my ($self, $event) = @_;
		     $closehandler->(@_);
		     $::restart++;
		     $self->Close(1);
		 });

	EVT_MENU($self, wxID_ABOUT,
		 sub {
		     Wx::MessageBox("$::appname -- Squirrel Consultancy\n".
				    "wxPerl version $Wx::VERSION\n".
				    "wxWidgets version ".Wx::wxVERSION,
				    "Info...",
				    wxOK,
				    $self);
		 });

	EVT_MENU($self, MENU_GRBK,
		 sub {
		     use AccPanel;
		     $self->{d_accpanel} ||= AccPanel->new($self, -1,
							   "Onderhoud Grootboekrekeningen",
							   [$config->accw->{xpos},$config->accw->{ypos}],
							   [$config->accw->{xwidth},$config->accw->{ywidth}],
							  );
		     $self->{d_accpanel}->SetSize([$config->accw->{xwidth},$config->accw->{ywidth}]);
#		     $self->{d_accpanel}->ShowModal();
		     $self->{d_accpanel}->Show(1);
		 });

	EVT_MENU($self, MENU_REL,
		 sub {
		     use RelPanel;
		     $self->{d_relpanel} ||= RelPanel->new($self, -1,
							   "Onderhoud Relaties",
							   [$config->relw->{xpos},$config->relw->{ypos}],
							   [$config->relw->{xwidth},$config->relw->{ywidth}],
							  );
		     $self->{d_relpanel}->SetSize([$config->relw->{xwidth},$config->relw->{ywidth}]);
#		     $self->{d_relpanel}->ShowModal();
		     $self->{d_relpanel}->Show(1);
		 });

	EVT_MENU($self, MENU_BTW,
		 sub {
		     use BtwPanel;
		     $self->{d_btwpanel} ||= BtwPanel->new($self, -1,
							   "Onderhoud BTW tarievem",
							   [$config->btww->{xpos},$config->btww->{ypos}],
							   [$config->btww->{xwidth},$config->btww->{ywidth}],
							  );
		     $self->{d_btwpanel}->SetSize([$config->btww->{xwidth},$config->btww->{ywidth}]);
#		     $self->{d_btwpanel}->ShowModal();
		     $self->{d_btwpanel}->Show(1);
		 });

	return $self;

}


sub __set_properties {
	my $self = shift;

# begin wxGlade: MainFrame::__set_properties

	$self->SetTitle("EekBoek");
	$self->SetBackgroundColour(Wx::Colour->new(255, 255, 255));
	$self->{mainframe_statusbar}->SetStatusWidths(-1);
	
	my( @mainframe_statusbar_fields ) = (
		"EekBoek © 2005 Squirrel Consultancy ­ Geen administratie geladen"
	);

	if( @mainframe_statusbar_fields ) {
		$self->{mainframe_statusbar}->SetStatusText($mainframe_statusbar_fields[$_], $_) 	
		for 0 .. $#mainframe_statusbar_fields ;
	}

# end wxGlade
}

sub __do_layout {
	my $self = shift;

# begin wxGlade: MainFrame::__do_layout

	$self->{sz_main} = Wx::BoxSizer->new(wxHORIZONTAL);
	$self->{sz_main}->Add(120, 20, 0, wxEXPAND|wxADJUST_MINSIZE, 1);
	$self->{sz_main}->Add($self->{eb_logo}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 40);
	$self->{sz_main}->Add(120, 20, 1, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->SetAutoLayout(1);
	$self->SetSizer($self->{sz_main});
	$self->{sz_main}->Fit($self);
	$self->{sz_main}->SetSizeHints($self);
	$self->Layout();

# end wxGlade
}

sub dagboekenmenu {
    my $self = shift;
    my $sth = $dbh->sql_exec("SELECT dbk_id,dbk_desc,dbk_type".
			     " FROM Dagboeken".
			     " ORDER BY dbk_desc");

    use Wx::Event qw(EVT_MENU);

    my $tmp = Wx::Menu->new;
    while ( my $rr = $sth->fetchrow_arrayref ) {
	my ($id, $desc, $type) = @$rr;
	# This consumes Ids, but we do not expect to do this often.
	my $m = Wx::NewId();
	$tmp->Append($m, "$desc\tAlt-$id", "Dagboek $desc");
	$type = qw(X I V B K M)[$type];
	undef($self->{"d_dbkpanel$id"});
	EVT_MENU($self, $m,
		 sub {
		       ::set_status(">>> [$id] Dagboek $desc, id = $id, type = $type");
		       $self->{"d_dbkpanel$id"} ||=
			 "DbkPanel$type"->new($self, -1,
					      "Dagboek $desc");
		       ### TODO: How to save/restore geometry?
		       $self->{"d_dbkpanel$id"}->init($id, $desc);
		       $self->{"d_dbkpanel$id"}->Show(1);
		   });
    }

    my $ix = $self->{mainframe_menubar}->FindMenu("Dagboeken");
    $tmp = $self->{mainframe_menubar}->Replace
      ($ix, $tmp,
       $self->{mainframe_menubar}->GetLabelTop($ix));
    $tmp->Destroy if $tmp;
}

# end of class MainFrame

1;

