# generated by wxGlade 0.4cvs on Wed Aug  3 22:51:05 2005
# To get wxPerl visit http://wxPerl.sourceforge.net/

package main;

our $config;
our $dbh;

use Wx 0.15 qw[:allclasses];
use strict;
package RepBtw;

use Wx qw[:everything];
use base qw(Wx::Dialog);
use strict;

# begin wxGlade: ::dependencies
# end wxGlade

sub new {
	my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
	$parent = undef              unless defined $parent;
	$id     = -1                 unless defined $id;
	$title  = ""                 unless defined $title;
	$pos    = wxDefaultPosition  unless defined $pos;
	$size   = wxDefaultSize      unless defined $size;
	$name   = ""                 unless defined $name;

# begin wxGlade: RepBtw::new

	$style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxTHICK_FRAME 
		unless defined $style;

	$self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
	$self->{b_refresh} = Wx::Button->new($self, wxID_REFRESH, _T("Refresh"));
	$self->{b_props} = Wx::Button->new($self, wxID_PREFERENCES, _T("Preferences"));
	$self->{l_periode} = Wx::StaticText->new($self, -1, _T("Periode"), wxDefaultPosition, wxDefaultSize, );
	$self->{b_close} = Wx::Button->new($self, wxID_CLOSE, _T("Close"));
	$self->{gr_report} = Wx::Grid->new($self, -1);

	$self->__set_properties();
	$self->__do_layout();

	Wx::Event::EVT_BUTTON($self, wxID_REFRESH, \&OnRefresh);
	Wx::Event::EVT_BUTTON($self, wxID_PREFERENCES, \&OnProps);
	Wx::Event::EVT_BUTTON($self, wxID_CLOSE, \&OnClose);

# end wxGlade

	$self->{mew} = "rbtww";
	$self->{year} = substr($dbh->adm("begin"), 0, 4);
	$self->{btwp} = $dbh->adm("btwperiod");

	$self->refresh;

	return $self;

}

sub __set_properties {
	my $self = shift;

# begin wxGlade: RepBtw::__set_properties

	$self->SetTitle(_T("BTW  aangifte"));
	$self->{b_refresh}->SetToolTipString(_T("Bijwerken naar laatste gegevens"));
	$self->{b_props}->SetToolTipString(_T("Instellingsgegevens"));
	$self->{b_close}->SetToolTipString(_T("Venster sluiten"));
	$self->{gr_report}->CreateGrid(10, 4);
	$self->{gr_report}->SetRowLabelSize(0);
	$self->{gr_report}->SetColLabelSize(0);
	$self->{gr_report}->SetSelectionMode(wxGridSelectRows);

# end wxGlade
}

sub __do_layout {
	my $self = shift;

# begin wxGlade: RepBtw::__do_layout

	$self->{sz_outer} = Wx::BoxSizer->new(wxHORIZONTAL);
	$self->{sz_report} = Wx::BoxSizer->new(wxVERTICAL);
	$self->{sz_tools} = Wx::BoxSizer->new(wxHORIZONTAL);
	$self->{sz_tools}->Add($self->{b_refresh}, 0, wxLEFT|wxTOP|wxEXPAND|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 5);
	$self->{sz_tools}->Add($self->{b_props}, 0, wxLEFT|wxTOP|wxEXPAND|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 5);
	$self->{sz_tools}->Add(5, 1, 0, wxADJUST_MINSIZE, 0);
	$self->{sz_tools}->Add($self->{l_periode}, 1, wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{sz_tools}->Add(5, 1, 0, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sz_tools}->Add($self->{b_close}, 0, wxRIGHT|wxTOP|wxEXPAND|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 5);
	$self->{sz_report}->Add($self->{sz_tools}, 0, wxBOTTOM|wxEXPAND, 5);
	$self->{sz_report}->Add($self->{gr_report}, 1, wxEXPAND, 0);
	$self->{sz_outer}->Add($self->{sz_report}, 1, wxEXPAND, 0);
	$self->SetAutoLayout(1);
	$self->SetSizer($self->{sz_outer});
	$self->{sz_outer}->Fit($self);
	$self->{sz_outer}->SetSizeHints($self);
	$self->Layout();

# end wxGlade
}

sub refresh {
    my ($self) = @_;
    require EB::BTWAangifte;
    require EB::BTWAangifte::Grid;
    my $gr = $self->{gr_report};
    $gr->SetRowLabelSize(0);
    $gr->SetColLabelSize(0);
    $gr->EnableEditing(0);
    $gr->EnableDragRowSize(0);
    $gr->SetSelectionMode(wxGridSelectRows);

    $gr->CreateGrid(0, 4);
    EB::BTWAangifte->new->perform
	({ reporter => EB::BTWAangifte::Grid->new( grid => $gr ),
	   detail => $self->{detail} });
}

sub set_periode {
   my ($self, $p) = @_;
   if ( $p eq "j" ) {
       $self->{l_periode}->SetLabel("Gehele jaar");
   }
   elsif ( $p =~ /^k(\d+)$/ ) {
       $self->{l_periode}->SetLabel(qw(Eerste Tweede Derde Vierde)[$1-1] . " kwartaal");
   }
   elsif ( $p =~ /^m(\d+)$/ ) {
       $self->{l_periode}->SetLabel(qw(Januari Februari Maart April Mei Juni Juli Augustus September Oktober November December)[$1-1]);
   }
   else {
       $self->{l_periode}->SetLabel($p);
   }
   $self->Layout;
}

# wxGlade: RepBtw::OnRefresh <event_handler>
sub OnRefresh {
    my ($self, $event) = @_;
    $self->refresh;
}

# wxGlade: RepBtw::OnProps <event_handler>
sub OnProps {
    my ($self, $event) = @_;
    use BtwPrefsDialog;
    my $d = BtwPrefsDialog->new($self, -1, "Selecteer", wxDefaultPosition, wxDefaultSize,);
    my $ret = $d->ShowModal;
    if ( $ret == wxID_OK ) {
	$self->set_periode($d->{periode});
    }
    $d->Destroy;
}

# wxGlade: RepBtw::OnClose <event_handler>
sub OnClose {
    my ($self, $event) = @_;
    @{$config->get($self->{mew})}{qw(xpos ypos xwidth ywidth)} = ($self->GetPositionXY, $self->GetSizeWH);
    $self->Show(0);
}

# end of class RepBtw

1;

