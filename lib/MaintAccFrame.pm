# generated by wxGlade 0.4cvs on Sun Jul 31 15:29:31 2005
# To get wxPerl visit http://wxPerl.sourceforge.net/

use Wx 0.15 qw[:allclasses];
use strict;

package main;

our $config;

package MaintAccFrame;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

# begin wxGlade: ::dependencies
use Wx::Locale gettext => '_T';
# end wxGlade

use AccTreeCtrl;
use EB::Finance;

sub new {
	my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;

	warn("=> $size->[0] $size->[1]\n");

	$parent = undef              unless defined $parent;
	$id     = -1                 unless defined $id;
	$title  = ""                 unless defined $title;
	$pos    = wxDefaultPosition  unless defined $pos;
	$size   = wxDefaultSize      unless defined $size;
	$name   = ""                 unless defined $name;

# begin wxGlade: MaintAccFrame::new

	$style = wxDEFAULT_FRAME_STYLE 
		unless defined $style;

	$self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
	$self->{w_acc_frame} = Wx::SplitterWindow->new($self, -1, wxDefaultPosition, wxDefaultSize, wxSP_3D|wxSP_BORDER);
	$self->{maint_pane} = Wx::Panel->new($self->{w_acc_frame}, -1, wxDefaultPosition, wxDefaultSize, );
	$self->{sz_btw_staticbox} = Wx::StaticBox->new($self->{maint_pane}, -1, "BTW Tarief" );
	$self->{sz_saldo_staticbox} = Wx::StaticBox->new($self->{maint_pane}, -1, "Saldo" );
	$self->{sz_acc_all_staticbox} = Wx::StaticBox->new($self->{maint_pane}, -1, "Grootboekrekening" );
	$self->{tree_pane} = Wx::Panel->new($self->{w_acc_frame}, -1, wxDefaultPosition, wxDefaultSize, );
	

	# Menu Bar

	$self->{acc_frame_menubar} = Wx::MenuBar->new();
	$self->SetMenuBar($self->{acc_frame_menubar});
	my $wxglade_tmp_menu;
	$wxglade_tmp_menu = Wx::Menu->new();
	$wxglade_tmp_menu->Append(wxID_CLOSE, "E&xit\tAlt-x", "");
	$self->{acc_frame_menubar}->Append($wxglade_tmp_menu, "&File");
	$wxglade_tmp_menu = Wx::Menu->new();
	$wxglade_tmp_menu->Append(wxID_ABOUT, "&Info", "");
	$self->{acc_frame_menubar}->Append($wxglade_tmp_menu, "&Hulp");
	
# Menu Bar end

	$self->{acc_frame_statusbar} = $self->CreateStatusBar(1, 0);
	$self->{acc_tree} = AccTreeCtrl->new($self->{tree_pane}, -1, wxDefaultPosition, wxDefaultSize, wxTR_HAS_BUTTONS|wxTR_NO_LINES|wxTR_HIDE_ROOT|wxTR_DEFAULT_STYLE|wxSUNKEN_BORDER);
	$self->{l_acc_id} = Wx::StaticText->new($self->{maint_pane}, -1, "Nr.", wxDefaultPosition, wxDefaultSize, );
	$self->{l_acc_desc} = Wx::StaticText->new($self->{maint_pane}, -1, "Omschrijving", wxDefaultPosition, wxDefaultSize, );
	$self->{t_acc_id} = Wx::TextCtrl->new($self->{maint_pane}, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{t_acc_desc} = Wx::TextCtrl->new($self->{maint_pane}, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{rb_balres} = Wx::RadioBox->new($self->{maint_pane}, -1, "Indeling", wxDefaultPosition, wxDefaultSize, ["Balans", "Resultaat"], 0, wxRA_SPECIFY_ROWS);
	$self->{rb_debcrd} = Wx::RadioBox->new($self->{maint_pane}, -1, "Richting", wxDefaultPosition, wxDefaultSize, ["Debet", "Credit"], 0, wxRA_SPECIFY_ROWS);
	$self->{rb_kstomz} = Wx::RadioBox->new($self->{maint_pane}, -1, "Soort", wxDefaultPosition, wxDefaultSize, ["Kosten", "Omzet"], 0, wxRA_SPECIFY_ROWS);
	$self->{l_saldo_opening} = Wx::StaticText->new($self->{maint_pane}, -1, "Opening", wxDefaultPosition, wxDefaultSize, );
	$self->{t_saldo_opening} = Wx::StaticText->new($self->{maint_pane}, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{l_saldo_act} = Wx::StaticText->new($self->{maint_pane}, -1, "Actueel", wxDefaultPosition, wxDefaultSize, );
	$self->{t_saldo_act} = Wx::StaticText->new($self->{maint_pane}, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{b_accept} = Wx::Button->new($self->{maint_pane}, wxID_OK, "Toepassen");
	$self->{b_cancel} = Wx::Button->new($self->{maint_pane}, wxID_CANCEL, "Annuleren");

	$self->__set_properties();
	$self->__do_layout();

# end wxGlade

	$self->{maint_pane}->Enable(0);

	my $sth = $::dbh->sql_exec("SELECT btw_id,btw_desc FROM BTWTabel ORDER BY btw_id");
	my @a;
	my $i = 0;
	my $fmt = "%2d    %s";
	while ( my $rr = $sth->fetchrow_arrayref ) {
	    while ( $i < $rr->[0] ) {
		$a[$i] = sprintf($fmt, $i, "<< Ongebruikt >>");
		$i++;
	    }
	    $a[$rr->[0]] = sprintf($fmt, $rr->[0], $rr->[1]);
	    $i++;
	}
	$self->{ch_btw} = Wx::Choice->new($self->{maint_pane}, -1,
					  wxDefaultPosition, wxDefaultSize,
					  [@a], );
	$self->{sz_btw}->Add($self->{ch_btw}, 1, wxEXPAND, 0);
	$self->{sz_btw}->Layout;

	use Wx::Event qw(EVT_MENU);

	my $closehandler = sub {
	    my ($self, $event) = @_;
	    my @a = $self->GetPositionXY;
	    $config->set("xpos", $a[0]);
	    $config->set("ypos", $a[1]);
	    @a = $self->GetSizeWH;
	    $config->set("xwidth", $a[0]);
	    $config->set("ywidth", $a[1]);

#	    # Explicitly destroy the hidden (but still alive!) dialogs.
#	    foreach ( qw(search select filedialog dirdialog) ) {
#		next unless $self->{"d_$_"};
#		$self->{"d_$_"}->Destroy;
#	    }
	};

	EVT_MENU($self, wxID_CLOSE,
		 sub {
		     my ($self, $event) = @_;
		     $closehandler->(@_);
		     $self->Close(1);
		 });

	use Wx::Event qw(EVT_SPLITTER_SASH_POS_CHANGED);

	EVT_SPLITTER_SASH_POS_CHANGED($self->{w_acc_frame},
				      $self->{w_acc_frame},
				      sub {
					  my ($self, $event) = @_;
					  warn("sash = ", $self->GetSashPosition, "\n");
					  $config->set("sash1", $self->GetSashPosition);
				      });

	EVT_MENU($self, wxID_ABOUT,
		 sub {
		     Wx::MessageBox("$::appname -- Squirrel Consultancy\n".
				    "wxPerl version $Wx::VERSION\n".
				    "wxWidgets version ".Wx::wxVERSION,
				    "Info...",
				    wxOK,
				    $self);
		 });


	return $self;

}


sub __set_properties {
	my $self = shift;

# begin wxGlade: MaintAccFrame::__set_properties

	$self->SetTitle("frame");
	$self->{acc_frame_statusbar}->SetStatusWidths(-1);
	
	my( @acc_frame_statusbar_fields ) = (
		"acc_frame_statusbar"
	);

	if( @acc_frame_statusbar_fields ) {
		$self->{acc_frame_statusbar}->SetStatusText($acc_frame_statusbar_fields[$_], $_) 	
		for 0 .. $#acc_frame_statusbar_fields ;
	}
	$self->{rb_balres}->SetSelection(0);
	$self->{rb_debcrd}->SetSelection(0);
	$self->{rb_kstomz}->SetSelection(0);
	$self->{maint_pane}->Enable(0);

# end wxGlade
}

sub __do_layout {
	my $self = shift;

# begin wxGlade: MaintAccFrame::__do_layout

	$self->{acc_frame_sizer} = Wx::BoxSizer->new(wxHORIZONTAL);
	$self->{sz_acc_all}= Wx::StaticBoxSizer->new($self->{sz_acc_all_staticbox}, wxHORIZONTAL);
	$self->{sz_acc} = Wx::BoxSizer->new(wxVERTICAL);
	$self->{sz_acccan} = Wx::BoxSizer->new(wxHORIZONTAL);
	$self->{sz_saldo}= Wx::StaticBoxSizer->new($self->{sz_saldo_staticbox}, wxHORIZONTAL);
	$self->{gr_saldo} = Wx::FlexGridSizer->new(2, 2, 5, 5);
	$self->{sz_btw}= Wx::StaticBoxSizer->new($self->{sz_btw_staticbox}, wxHORIZONTAL);
	$self->{sz_properties} = Wx::BoxSizer->new(wxHORIZONTAL);
	$self->{sz_id} = Wx::FlexGridSizer->new(2, 2, 5, 5);
	$self->{sz_tree} = Wx::BoxSizer->new(wxHORIZONTAL);
	$self->{sz_tree}->Add($self->{acc_tree}, 1, wxEXPAND, 0);
	$self->{tree_pane}->SetAutoLayout(1);
	$self->{tree_pane}->SetSizer($self->{sz_tree});
	$self->{sz_tree}->Fit($self->{tree_pane});
	$self->{sz_tree}->SetSizeHints($self->{tree_pane});
	$self->{sz_id}->Add($self->{l_acc_id}, 0, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sz_id}->Add($self->{l_acc_desc}, 0, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sz_id}->Add($self->{t_acc_id}, 0, wxADJUST_MINSIZE, 0);
	$self->{sz_id}->Add($self->{t_acc_desc}, 0, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sz_id}->AddGrowableCol(1);
	$self->{sz_acc}->Add($self->{sz_id}, 0, wxLEFT|wxRIGHT|wxTOP|wxEXPAND|wxADJUST_MINSIZE, 5);
	$self->{sz_properties}->Add($self->{rb_balres}, 1, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sz_properties}->Add($self->{rb_debcrd}, 1, wxLEFT|wxRIGHT|wxEXPAND|wxADJUST_MINSIZE, 5);
	$self->{sz_properties}->Add($self->{rb_kstomz}, 1, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sz_acc}->Add($self->{sz_properties}, 0, wxTOP|wxBOTTOM|wxEXPAND|wxADJUST_MINSIZE, 5);
	$self->{sz_acc}->Add($self->{sz_btw}, 0, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{gr_saldo}->Add($self->{l_saldo_opening}, 0, wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{gr_saldo}->Add($self->{t_saldo_opening}, 0, wxLEFT|wxEXPAND|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{gr_saldo}->Add($self->{l_saldo_act}, 0, wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{gr_saldo}->Add($self->{t_saldo_act}, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{gr_saldo}->AddGrowableCol(1);
	$self->{sz_saldo}->Add($self->{gr_saldo}, 1, wxBOTTOM|wxEXPAND, 5);
	$self->{sz_acc}->Add($self->{sz_saldo}, 0, wxEXPAND, 0);
	$self->{sz_acc}->Add(0, 0, 1, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sz_acccan}->Add($self->{b_accept}, 0, wxLEFT|wxBOTTOM|wxEXPAND|wxADJUST_MINSIZE, 5);
	$self->{sz_acccan}->Add(5, 0, 1, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sz_acccan}->Add($self->{b_cancel}, 0, wxRIGHT|wxBOTTOM|wxEXPAND|wxADJUST_MINSIZE, 5);
	$self->{sz_acc}->Add($self->{sz_acccan}, 0, wxEXPAND, 0);
	$self->{sz_acc_all}->Add($self->{sz_acc}, 1, wxEXPAND, 0);
	$self->{maint_pane}->SetAutoLayout(1);
	$self->{maint_pane}->SetSizer($self->{sz_acc_all});
	$self->{sz_acc_all}->Fit($self->{maint_pane});
	$self->{sz_acc_all}->SetSizeHints($self->{maint_pane});
	$self->{w_acc_frame}->SplitVertically($self->{tree_pane}, $self->{maint_pane}, $config->sash1);
	$self->{acc_frame_sizer}->Add($self->{w_acc_frame}, 1, wxEXPAND, 0);
	$self->SetAutoLayout(1);
	$self->SetSizer($self->{acc_frame_sizer});
	$self->{acc_frame_sizer}->Fit($self);
	$self->{acc_frame_sizer}->SetSizeHints($self);
	$self->Layout();

# end wxGlade

	$self->{w_acc_frame}->SetSashPosition($config->sash1);

}

sub _nf {
    my ($v, $debcrd) = @_;
warn("_nf(@_)\n");
    numfmtw(abs($v)) . " " .
      (($debcrd ^ ($v < 0)) ? "Credit" : ($v ? "Debet" : ""));
}

sub set_acc {
    my ($self, $id) = @_;

    my $rr = $::dbh->do("SELECT acc_desc, acc_balres, acc_kstomz, acc_debcrd, acc_btw,".
			" acc_balance, acc_ibalance FROM Accounts".
			" WHERE acc_id = ?", $id);

    $self->{t_acc_id}->SetValue($id);
    $self->{t_acc_desc}->SetValue($rr->[0]);
    $self->{rb_balres}->SetSelection($rr->[1]);
    $self->{rb_kstomz}->SetSelection($rr->[2]);
    $self->{rb_debcrd}->SetSelection($rr->[3]);
    $self->{rb_debcrd}->Show(1);
    $self->{sz_properties}->Layout;
    $self->{ch_btw}->SetSelection($rr->[4]);
    $self->{t_saldo_act}->SetLabel(_nf($rr->[5], $rr->[3]));
    $self->{t_saldo_opening}->SetLabel(_nf($rr->[6], $rr->[3]));

    $self->{sz_acc}->Show($self->{sz_btw}, 1);
    $self->{sz_acc}->Show($self->{sz_saldo}, 1);
    $self->{sz_acc}->Layout;

    $self->{sz_acc_all}->GetStaticBox->SetLabel("Grootboekrekening");

    $self->{b_accept}->Enable(0);
    $self->{b_cancel}->Enable(0);
    $self->{maint_pane}->Enable(1);
}

sub set_vrd {
    my ($self, $id) = @_;

    my $rr = $::dbh->do("SELECT vdi_desc, vdi_balres, vdi_kstomz, vdi_struct".
			" FROM Verdichtingen".
			" WHERE vdi_id = ?", $id);

    $self->{t_acc_id}->SetValue($id);
    $self->{t_acc_desc}->SetValue($rr->[0]);
    $self->{rb_balres}->SetSelection($rr->[1]);
    $self->{rb_kstomz}->SetSelection($rr->[2]);
    $self->{rb_debcrd}->Show(0);
    $self->{sz_properties}->Layout;

    $self->{sz_acc}->Show($self->{sz_btw}, 0);
    $self->{sz_acc}->Show($self->{sz_saldo}, 0);
    $self->{sz_acc}->Layout;

    $self->{sz_acc_all}->GetStaticBox->SetLabel("Verdichting");

    $self->{b_accept}->Enable(0);
    $self->{b_cancel}->Enable(0);
    $self->{maint_pane}->Enable(1);
}

# end of class MaintAccFrame

1;

